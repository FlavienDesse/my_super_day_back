{"version":3,"sources":["Controller/CheckConnected.js","Model/helper.js","Model/globalRoutes.js","Model/Error404.js","Components/Layout.js","app.js","index.js"],"names":["authHeader","user","JSON","parse","window","localStorage","getItem","accessToken","getUserBoard","a","requestOptions","method","headers","fetch","url","then","response","json","data","console","log","status","authService","login","setItem","stringify","currentUser","callback","getCurrentUser","this","isConnected","CheckConnected","res","deconnected","clear","undefined","subscribe","e","compose","mount","map","request","context","route","getView","req","Dashboard","Biorythm","redirect","Calculator","SignUp","SignIn","Error404","Layout","children","loadingRoute","useLoadingRoute","className","BusyIndicator","isBusy","delayMs","render","App","useState","setCurrentUser","useEffect","routes","fallback","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.716633b7.chunk.js","sourcesContent":["function authHeader() {\r\n    const user = JSON.parse(window.localStorage.getItem('users'));\r\n\r\n    if (user && user.accessToken) {\r\n        // for Node.js Express back-end\r\n        return {'x-access-token': user.accessToken};\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport default async function getUserBoard() {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: authHeader(),\r\n    };\r\n\r\n    return await fetch(`${window.url}/mysuperday/api/users/verifyToken`, requestOptions)\r\n\r\n        .then(response => async () => {\r\n               return await response.json()\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        if(response.status===403 ||response.status===401||response.status===500 ){\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    })\r\n            }\r\n        )\r\n\r\n\r\n}\r\n","import CheckConnected from \"../Controller/CheckConnected\";\r\n\r\nexport const authService = {\r\n\r\n    async login(data) {\r\n        window.localStorage.setItem('users', JSON.stringify(data))\r\n        this.currentUser = data\r\n        if (this.callback) {\r\n            this.callback(data)\r\n        }\r\n    },\r\n    getCurrentUser() {\r\n        return this.currentUser\r\n    },\r\n    async isConnected() {\r\n\r\n        return await CheckConnected().then((res) => {\r\n            return res\r\n        })\r\n    },\r\n    async deconnected() {\r\n        console.log(window.localStorage)\r\n        delete this.currentUser\r\n        window.localStorage.clear();\r\n        if (await this.callback) {\r\n            this.callback(undefined)\r\n        }\r\n        console.log(window.localStorage)\r\n    },\r\n\r\n    subscribe(callback) {\r\n        this.callback = callback\r\n        return () => {\r\n            this.callback = undefined\r\n        }\r\n    }\r\n\r\n}\r\ntry {\r\n    authService.currentUser = JSON.parse(window.localStorage.getItem('users'))\r\n} catch (e) {\r\n}","import {compose, mount, route, redirect, map} from 'navi'\r\nimport React from 'react'\r\n\r\nexport default compose(\r\n    mount({\r\n        '/mysuperday/dashboard/biorythme': map(async (request, context) =>\r\n            await context.authService.isConnected() ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Biorythm} = await import('../Components/Biorythm/BiorythmMain/biorythm')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Biorythm/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/calculatrice': map(async (request, context) =>\r\n            await context.authService.isConnected() ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Calculator} = await import('../Components/Calculator/CalculatorMain/calculator')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Calculator/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard': map(async (request, context) =>\r\n            await context.authService.isConnected() ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            return <Dashboard authService={context.authService}/>\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/users/signup': route({\r\n            getView:\r\n                async (req, context) => {\r\n                    const {SignUp} = await import('../Components/SignUp/signUp')\r\n                    return <SignUp authService={context.authService}/>\r\n                },\r\n        }),\r\n        '/mysuperday/users/signin': map(async (request, context) =>\r\n            await context.authService.isConnected() ?\r\n                redirect('/mysuperday/dashboard')\r\n                : route({\r\n                    getView:\r\n                        async (req, context) => {\r\n\r\n                            const {SignIn} = await import('../Components/SignIn/signIn')\r\n                            return <SignIn authService={context.authService}/>\r\n                        },\r\n                })\r\n        ),\r\n        '/': redirect('/mysuperday/users/signin'),\r\n        '/mysuperday': redirect('/mysuperday/users/signin'),\r\n\r\n    })\r\n)","import React from \"react\";\r\n\r\n\r\nexport default function Error404 () {\r\n    return(\r\n        <div>\r\n            Erreur 404\r\n        </div>\r\n    )\r\n}","import BusyIndicator from 'react-busy-indicator'\r\nimport React from 'react'\r\nimport {  NotFoundBoundary, useLoadingRoute } from 'react-navi'\r\nimport Error404 from \"../Model/Error404\";\r\n\r\nexport default function Layout({ children }) {\r\n    // If there is a route that hasn't finished loading, it can be\r\n    // retrieved with `useLoadingRoute()`.\r\n    let loadingRoute = useLoadingRoute()\r\n\r\n    return (\r\n        <div className=\"Layout\">\r\n            {/* This component shows a loading indicator after a delay */}\r\n            <BusyIndicator isBusy={!!loadingRoute} delayMs={200} />\r\n            <main>\r\n                <NotFoundBoundary render={Error404}>\r\n                    {children}\r\n                </NotFoundBoundary>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Suspense, useEffect, useState} from 'react'\r\nimport {authService} from './Model/helper'\r\nimport routes from './Model/globalRoutes'\r\nimport {Router, View} from 'react-navi'\r\nimport Layout from './Components/Layout'\r\n\r\nwindow.url = \"https://bdoalex.com\"\r\n\r\nexport default function App() {\r\n    let [currentUser,setCurrentUser] = useState(() => authService.getCurrentUser())\r\n\r\n    useEffect(()=> authService.subscribe(setCurrentUser),[])\r\n\r\n    return (\r\n\r\n        <Router routes={routes} context={{authService, currentUser}}>\r\n            <Layout>\r\n                <Suspense fallback={null}>\r\n                    <View/>\r\n                </Suspense>\r\n\r\n            </Layout>\r\n\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app'\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <App></App>\r\n        </Router>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}