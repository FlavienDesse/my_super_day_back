{"version":3,"sources":["Components/SignIn/style.js","Components/SignIn/signIn.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","authService","history","useHistory","classes","refTextFieldUsername","React","createRef","refTextFieldPassword","useState","errorMessage","setErrorMessage","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","FormControl","noValidate","method","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","inputRef","type","Button","color","onClick","username","password","requestOptions","headers","body","JSON","stringify","fetch","window","url","then","response","json","data","status","message","accessToken","login","push","callBDD","current","value","Collapse","in","Alert","severity","action","IconButton","aria-label","size","fontSize","Grid","container","item","href"],"mappings":"kRAuBeA,EApBGC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,Q,6DCA7B,SAASa,EAAT,GAAgC,IAAfC,EAAc,EAAdA,YAEhBC,EAAUC,cACRC,EAAUtB,IACVuB,EAAuBC,IAAMC,YAC7BC,EAAuBF,IAAMC,YALD,EAMMD,IAAMG,SAAS,IANrB,mBAM3BC,EAN2B,KAMbC,EANa,KAkDlC,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWZ,EAAQnB,OACpB,kBAACgC,EAAA,EAAD,CAAQD,UAAWZ,EAAQb,QACvB,kBAAC,IAAD,OAEJ,kBAAC2B,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAAnC,gBAGA,kBAACC,EAAA,EAAD,CAAaJ,UAAWZ,EAAQP,KAAMwB,YAAU,EAACC,OAAO,QACpD,kBAACC,EAAA,EAAD,CACIJ,QAAQ,WACR3B,OAAO,SACPgC,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,MACNC,KAAK,WACLC,aAAa,WACbC,WAAS,EACTC,SAAU1B,IAGd,kBAACkB,EAAA,EAAD,CACIJ,QAAQ,WACR3B,OAAO,SACPgC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,eACNK,KAAK,WACLN,GAAG,WACHG,aAAa,mBACbE,SAAUvB,IAId,kBAACyB,EAAA,EAAD,CACID,KAAK,SACLP,WAAS,EACTN,QAAQ,YACRe,MAAM,UACNlB,UAAWZ,EAAQL,OACnBoC,QAAS,kBArF7B,SAAiBC,EAAUC,GAEvB,IAAMC,EAAiB,CACnBhB,OAAQ,OACRiB,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBN,SAAUA,EACVC,SAAUA,KAKlBM,MAAM,GAAD,OAAIC,OAAOC,IAAX,gCAA8CP,GAE9CQ,MAAK,SAAAC,GACFA,EAASC,OACJF,MAAK,SAAAG,GACsB,MAApBF,EAASG,QAEkB,MAApBH,EAASG,QAGW,MAApBH,EAASG,OAJhBvC,EAAgBsC,EAAKE,UAQrBxC,EAAgB,IACZsC,EAAKG,cACLnD,EAAYoD,MAAMJ,GAElB/C,EAAQoD,KAAK,iCAuDNC,CAAQlD,EAAqBmD,QAAQC,MAAOjD,EAAqBgD,QAAQC,SAN5F,gBAUA,kBAACC,EAAA,EAAD,CAAUC,GAAqB,KAAjBjD,GACV,kBAACkD,EAAA,EAAD,CAAOC,SAAS,QACTC,OACI,kBAACC,EAAA,EAAD,CACIC,aAAW,QACX9B,MAAM,UACN+B,KAAK,QACL9B,QAAS,WACLxB,EAAgB,MAGpB,kBAAC,IAAD,CAAWuD,SAAS,cAI9BxD,IAGT,kBAACyD,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,GACN,kBAAC,IAAD,CAAMC,KAAK,4BACN","file":"static/js/15.9c17c2c7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from \"./style\";\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {useHistory} from \"react-navi\";\r\nimport { Link} from 'react-navi';\r\n\r\nexport function SignIn({authService}) {\r\n\r\n    let history = useHistory()\r\n    const classes = useStyles();\r\n    const refTextFieldUsername = React.createRef();\r\n    const refTextFieldPassword = React.createRef();\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\")\r\n\r\n\r\n    function callBDD(username, password) {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n\r\n            }),\r\n\r\n        };\r\n        fetch(`${window.url}/mysuperday/api/users/signin`, requestOptions)\r\n\r\n            .then(response => {\r\n                response.json()\r\n                    .then(data => {\r\n                        if (response.status === 500) {\r\n                            setErrorMessage(data.message)\r\n                        } else if (response.status === 404) {\r\n                            setErrorMessage(data.message)\r\n\r\n                        } else if (response.status === 401) {\r\n                            setErrorMessage(data.message)\r\n\r\n                        } else {\r\n                            setErrorMessage(\"\")\r\n                            if (data.accessToken) {\r\n                                authService.login(data)\r\n\r\n                                history.push(\"/mysuperday/dashboard\")\r\n                            }\r\n\r\n\r\n                        }\r\n\r\n                    })\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <WbSunnyIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Se connecter\r\n                </Typography>\r\n                <FormControl className={classes.form} noValidate method=\"post\">\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Nom\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        inputRef={refTextFieldUsername}\r\n\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Mot de passe\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        inputRef={refTextFieldPassword}\r\n\r\n\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={() => callBDD(refTextFieldUsername.current.value, refTextFieldPassword.current.value)}\r\n                    >\r\n                        Se connecter\r\n                    </Button>\r\n                    <Collapse in={errorMessage !== \"\"}>\r\n                        <Alert severity=\"error\"\r\n                               action={\r\n                                   <IconButton\r\n                                       aria-label=\"close\"\r\n                                       color=\"inherit\"\r\n                                       size=\"small\"\r\n                                       onClick={() => {\r\n                                           setErrorMessage(\"\");\r\n                                       }}\r\n                                   >\r\n                                       <CloseIcon fontSize=\"inherit\"/>\r\n                                   </IconButton>\r\n                               }\r\n                        >\r\n                            {errorMessage}\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/mysuperday/users/signup\" >\r\n                                {\"Pas de compte ?\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </FormControl>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n}"],"sourceRoot":""}