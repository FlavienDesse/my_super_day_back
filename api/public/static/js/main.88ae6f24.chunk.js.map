{"version":3,"sources":["Controller/CheckConnected.js","Model/helper.js","Model/globalRoutes.js","Model/Error404.js","Components/Layout.js","app.js","index.js"],"names":["authHeader","user","JSON","parse","window","localStorage","getItem","accessToken","CheckConnected","requestOptions","method","headers","Object","assign","fetch","url","then","response","status","authService","login","data","setItem","stringify","currentUser","callback","getCurrentUser","this","clear","isConnected","res","subscribe","undefined","e","compose","mount","map","request","context","a","route","getView","req","Dashboard","Biorythm","redirect","Agenda","StockExchange","TraductorMain","Weather","Horoscope","NoteBlock","Calculator","SignUp","SignIn","Error404","Layout","children","loadingRoute","useLoadingRoute","className","BusyIndicator","isBusy","delayMs","render","App","useState","setCurrentUser","useEffect","routes","fallback","ReactDOM","document","getElementById"],"mappings":"6GAAO,SAASA,IACZ,IAAMC,EAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAEpD,OAAIL,GAAQA,EAAKM,YAEN,CAAC,iBAAkBN,EAAKM,aAExB,GAIR,SAASC,IAEZ,IAAMC,EAAiB,CACnBC,OAAQ,MACRC,QAASC,OAAOC,OAAO,GAAIb,IAAc,CAAC,eAAgB,sBAI9D,OAAOc,MAAM,GAAD,OAAIV,OAAOW,IAAX,qCAAmDN,GAE1DO,MAAK,SAACC,GACH,OAAwB,MAApBA,EAASC,QAAsC,MAApBD,EAASC,QAAsC,MAApBD,EAASC,UAtB/E,qE,uJCEaC,EAAc,CAEjBC,MAFiB,SAEXC,GAAO,IAAD,kHACdjB,OAAOC,aAAaiB,QAAQ,QAASpB,KAAKqB,UAAUF,IACpD,EAAKG,YAAcH,EACf,EAAKI,UACL,EAAKA,SAASJ,GAJJ,8CAOlBK,eATuB,WAUnB,OAAOC,KAAKH,aAEhBI,MAZuB,kBAaZD,KAAKH,YACZnB,aAAaiB,QAAQ,QAAQpB,KAAKqB,UAAU,CACxChB,YAAY,WAGdsB,YAlBiB,WAkBF,IAAD,+HAGZ5B,EAAO,EAAKuB,aAHA,oBAKa,SAArBvB,EAAKM,YALG,8BAMD,EAAKiB,YANJ,mBAOD,GAPC,uBASQhB,cATR,cASJsB,EATI,yBAUDA,GAVC,8CAcL,EAAKN,YAdA,mBAeL,GAfK,+CAqBpBO,UAvCuB,SAuCbN,GAAW,IAAD,OAEhB,OADAE,KAAKF,SAAWA,EACT,WACH,EAAKA,cAAWO,KAK5B,IACIb,EAAYK,YAActB,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UACnE,MAAO2B,I,WChDMC,cACXC,YAAM,CACF,kCAAmCC,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEAC3BD,EAAQnB,YAAYU,cADO,uCACUW,YAAM,CAC3CC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAE6B,oEAF7B,uBAEWC,EAFX,EAEWA,SAFX,kBAIQ,kBAACD,EAAD,CAAYxB,YAAamB,EAAQnB,aAC7B,kBAACyB,EAAD,QALZ,2CADG,qDAAC,KAFmB,2BAc/BC,YAAS,4BAdsB,iFAAD,yDAgBtC,+BAAgCT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEACxBD,EAAQnB,YAAYU,cADI,uCACaW,YAAM,CAC3CC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAE2B,yEAF3B,uBAEWG,EAFX,EAEWA,OAFX,kBAIQ,kBAACH,EAAD,CAAYxB,YAAamB,EAAQnB,aAC7B,kBAAC2B,EAAD,QALZ,2CADG,qDAAC,KAFgB,2BAc5BD,YAAS,4BAdmB,iFAAD,yDAgBnC,+BAAgCT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEACxBD,EAAQnB,YAAYU,cADI,uCACaW,YAAM,CAC3CC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAEkC,0EAFlC,uBAEWI,EAFX,EAEWA,cAFX,kBAIQ,kBAACJ,EAAD,CAAYxB,YAAamB,EAAQnB,aAC7B,kBAAC4B,EAAD,QALZ,2CADG,qDAAC,KAFgB,2BAc5BF,YAAS,4BAdmB,iFAAD,yDAgBnC,mCAAoCT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEAC5BD,EAAQnB,YAAYU,cADQ,uCACSW,YAAM,CAC3CC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAEkC,mEAFlC,uBAEWK,EAFX,EAEWA,cAFX,kBAIQ,kBAACL,EAAD,CAAYxB,YAAamB,EAAQnB,aAC7B,kBAAC6B,EAAD,QALZ,2CADG,qDAAC,KAFoB,2BAchCH,YAAS,4BAduB,iFAAD,yDAgBvC,8BAA+BT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEACvBD,EAAQnB,YAAYU,cADG,uCACcW,YAAM,CAC3CC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAE4B,0EAF5B,uBAEWM,EAFX,EAEWA,QAFX,kBAIQ,kBAACN,EAAD,CAAYxB,YAAamB,EAAQnB,aAC7B,kBAAC8B,EAAD,QALZ,2CADG,qDAAC,KAFe,2BAc3BJ,YAAS,4BAdkB,iFAAD,yDAgBlC,kCAAmCT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEAC3BD,EAAQnB,YAAYU,cADO,uCACUW,YAAM,CAC3CC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAE8B,qDAF9B,uBAEWO,EAFX,EAEWA,UAFX,kBAIQ,kBAACP,EAAD,CAAYxB,YAAamB,EAAQnB,aAC7B,kBAAC+B,EAAD,QALZ,2CADG,qDAAC,KAFmB,2BAc/BL,YAAS,4BAdsB,iFAAD,yDAgBtC,iCAAkCT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEAC1BD,EAAQnB,YAAYU,cADM,uCACWW,YAAM,CAE3CC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAE8B,2EAF9B,uBAEWQ,EAFX,EAEWA,UAFX,kBAIQ,kBAACR,EAAD,CAAYxB,YAAamB,EAAQnB,aAC7B,kBAACgC,EAAD,CAAWhC,YAAamB,EAAQnB,gBAL5C,2CADG,qDAAC,KAHkB,2BAe9B0B,YAAS,4BAfqB,iFAAD,yDAiBrC,qCAAsCT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEAC9BD,EAAQnB,YAAYU,cADU,uCACOW,YAAM,CAE3CC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAE+B,0EAF/B,uBAEWS,EAFX,EAEWA,WAFX,kBAIQ,kBAACT,EAAD,CAAYxB,YAAamB,EAAQnB,aAC7B,kBAACiC,EAAD,CAAYjC,YAAamB,EAAQnB,gBAL7C,2CADG,qDAAC,KAHsB,2BAelC0B,YAAS,4BAfyB,iFAAD,yDAiBzC,wBAAyBT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEACjBD,EAAQnB,YAAYU,cADH,uCACoBW,YAAM,CAC3CC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,iBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,kBAEW,kBAACA,EAAD,CAAWxB,YAAamB,EAAQnB,eAF3C,2CADG,qDAAC,KAFS,2BASrB0B,YAAS,4BATY,iFAAD,yDAW5B,2BAA4BL,YAAM,CAC9BC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,iBAAAC,EAAA,sEAC2B,0EAD3B,uBACWc,EADX,EACWA,OADX,kBAEW,kBAACA,EAAD,CAAQlC,YAAamB,EAAQnB,eAFxC,2CADG,qDAAC,KAMZ,2BAA4BiB,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEACpBD,EAAQnB,YAAYU,cADA,uCAExBgB,YAAS,yBAFe,2BAGtBL,YAAM,CACJC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,iBAAAC,EAAA,sEAE2B,0EAF3B,uBAEWe,EAFX,EAEWA,OAFX,kBAGW,kBAACA,EAAD,CAAQnC,YAAamB,EAAQnB,eAHxC,2CADG,qDAAC,KAJY,iFAAD,yDAY/B,IAAK0B,YAAS,4BACd,cAAeA,YAAS,+B,eCnKjB,SAASU,IACpB,OACI,2CCAO,SAASC,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAGzBC,EAAeC,cAEnB,OACI,yBAAKC,UAAU,UAEX,kBAACC,EAAA,EAAD,CAAeC,SAAUJ,EAAcK,QAAS,MAChD,8BACI,kBAAC,IAAD,CAAkBC,OAAQT,GACrBE,KCRN,SAASQ,IAAO,IAAD,EACSC,oBAAS,kBAAM/C,EAAYO,oBADpC,mBACrBF,EADqB,KACT2C,EADS,KAK1B,OAFAC,qBAAU,kBAAKjD,EAAYY,UAAUoC,KAAgB,IAIjD,kBAAC,IAAD,CAAQE,OAAQA,EAAQ/B,QAAS,CAACnB,cAAaK,gBAC3C,kBAACgC,EAAD,KACI,kBAAC,WAAD,CAAUc,SAAU,MAChB,kBAAC,IAAD,SAZpBlE,OAAOW,IAAM,sB,YCAbwD,IAASP,OACD,kBAAC,IAAD,KACI,kBAACC,EAAD,OAGRO,SAASC,eAAe,W","file":"static/js/main.88ae6f24.chunk.js","sourcesContent":["export function authHeader() {\r\n    const user = JSON.parse(window.localStorage.getItem('users'));\r\n\r\n    if (user && user.accessToken) {\r\n        // for Node.js Express back-end\r\n        return {'x-access-token': user.accessToken};\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport function CheckConnected() {\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: Object.assign({}, authHeader(), {'Content-Type': 'application/json'}),\r\n    };\r\n\r\n\r\n    return fetch(`${window.url}/mysuperday/api/users/verifyToken`, requestOptions)\r\n\r\n        .then((response) => {\r\n            if (response.status === 403 || response.status === 401 || response.status === 500) {\r\n                return false;\r\n            }\r\n            return true;\r\n        })\r\n\r\n\r\n}\r\n","import {CheckConnected} from \"../Controller/CheckConnected\";\r\n\r\nexport const authService = {\r\n\r\n    async login(data) {\r\n        window.localStorage.setItem('users', JSON.stringify(data))\r\n        this.currentUser = data\r\n        if (this.callback) {\r\n            this.callback(data)\r\n        }\r\n    },\r\n    getCurrentUser() {\r\n        return this.currentUser\r\n    },\r\n    clear(){\r\n        delete this.currentUser;\r\n        localStorage.setItem('users',JSON.stringify({\r\n            accessToken:\"null\"\r\n        }))\r\n    },\r\n    async isConnected() {\r\n\r\n\r\n        let user = this.currentUser;\r\n        if(user){\r\n            if (user.accessToken === \"null\") {\r\n                delete this.currentUser\r\n                return false\r\n            } else {\r\n                let res = await CheckConnected()\r\n                return res;\r\n            }\r\n        }\r\n        else {\r\n            delete this.currentUser\r\n            return false;\r\n        }\r\n\r\n    },\r\n\r\n\r\n    subscribe(callback) {\r\n        this.callback = callback\r\n        return () => {\r\n            this.callback = undefined\r\n        }\r\n    }\r\n\r\n}\r\ntry {\r\n    authService.currentUser = JSON.parse(window.localStorage.getItem('users'))\r\n} catch (e) {\r\n}","import {compose, mount, route, redirect, map} from 'navi'\r\nimport React from 'react'\r\n\r\nexport default compose(\r\n    mount({\r\n        '/mysuperday/dashboard/biorythme': map(async (request, context) =>\r\n            ( await context.authService.isConnected()) ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Biorythm} = await import('../Components/Biorythm/BiorythmMain/biorythm')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Biorythm/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/agenda': map(async (request, context) =>\r\n            ( await context.authService.isConnected()) ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Agenda} = await import('../Components/Agenda/AgendaMain/agenda')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Agenda/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/bourse': map(async (request, context) =>\r\n            ( await context.authService.isConnected()) ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {StockExchange} = await import('../Components/StockExchange/stockExchangeMain/stockExchange')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <StockExchange/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/traducteur': map(async (request, context) =>\r\n            ( await context.authService.isConnected() )? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {TraductorMain} = await import('../Components/Traductor/TraductorMain/traductorMain')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <TraductorMain/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/meteo': map(async (request, context) =>\r\n            ( await context.authService.isConnected()) ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Weather} = await import('../Components/Weather/WeatherMain/weatherMain')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Weather/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/horoscope': map(async (request, context) =>\r\n            ( await context.authService.isConnected()) ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Horoscope} = await import('../Components/Horoscope/HoroscopeMain/horoscope')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Horoscope/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/blocNote': map(async (request, context) =>\r\n            ( await context.authService.isConnected()) ? route({\r\n\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {NoteBlock} = await import('../Components/NoteBlock/NoteBlockMain/noteBlock')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <NoteBlock authService={context.authService}/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/calculatrice': map(async (request, context) =>\r\n            ( await context.authService.isConnected()) ? route({\r\n\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Calculator} = await import('../Components/Calculator/CalculatorMain/calculator')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Calculator authService={context.authService}/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard': map(async (request, context) =>\r\n            ( await context.authService.isConnected()) ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            return <Dashboard authService={context.authService}/>\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/users/signup': route({\r\n            getView:\r\n                async (req, context) => {\r\n                    const {SignUp} = await import('../Components/SignUp/signUp')\r\n                    return <SignUp authService={context.authService}/>\r\n                },\r\n        }),\r\n        '/mysuperday/users/signin': map(async (request, context) =>\r\n            ( await context.authService.isConnected()) ?\r\n                redirect('/mysuperday/dashboard')\r\n                : route({\r\n                    getView:\r\n                        async (req, context) => {\r\n\r\n                            const {SignIn} = await import('../Components/SignIn/signIn')\r\n                            return <SignIn authService={context.authService}/>\r\n                        },\r\n                })\r\n        ),\r\n        '/': redirect('/mysuperday/users/signin'),\r\n        '/mysuperday': redirect('/mysuperday/users/signin'),\r\n\r\n    })\r\n)","import React from \"react\";\r\n\r\n\r\nexport default function Error404 () {\r\n    return(\r\n        <div>\r\n            Erreur 404\r\n        </div>\r\n    )\r\n}","import BusyIndicator from 'react-busy-indicator'\r\nimport React from 'react'\r\nimport {  NotFoundBoundary, useLoadingRoute } from 'react-navi'\r\nimport Error404 from \"../Model/Error404\";\r\n\r\nexport default function Layout({ children }) {\r\n    // If there is a route that hasn't finished loading, it can be\r\n    // retrieved with `useLoadingRoute()`.\r\n    let loadingRoute = useLoadingRoute()\r\n\r\n    return (\r\n        <div className=\"Layout\">\r\n            {/* This component shows a loading indicator after a delay */}\r\n            <BusyIndicator isBusy={!!loadingRoute} delayMs={200} />\r\n            <main>\r\n                <NotFoundBoundary render={Error404}>\r\n                    {children}\r\n                </NotFoundBoundary>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Suspense, useEffect, useState} from 'react'\r\nimport {authService} from './Model/helper'\r\nimport routes from './Model/globalRoutes'\r\nimport {Router, View} from 'react-navi'\r\nimport Layout from './Components/Layout'\r\n\r\nwindow.url = \"https://bdoalex.com\"\r\n\r\nexport default function App() {\r\n    let [currentUser,setCurrentUser] = useState(() => authService.getCurrentUser())\r\n\r\n    useEffect(()=> authService.subscribe(setCurrentUser),[])\r\n\r\n    return (\r\n\r\n        <Router routes={routes} context={{authService, currentUser}}>\r\n            <Layout>\r\n                <Suspense fallback={null}>\r\n                    <View/>\r\n                </Suspense>\r\n\r\n            </Layout>\r\n\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app'\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n        <Router>\r\n            <App></App>\r\n        </Router>\r\n    ,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}