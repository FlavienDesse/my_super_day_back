{"version":3,"sources":["Controller/CheckConnected.js","Model/helper.js","Model/globalRoutes.js","Model/Error404.js","Components/Layout.js","app.js","index.js"],"names":["authHeader","user","JSON","parse","window","localStorage","getItem","accessToken","authService","login","data","setItem","stringify","currentUser","callback","getCurrentUser","this","isConnected","requestOptions","method","headers","fetch","url","then","response","json","status","CheckConnected","res","deconnected","clear","undefined","subscribe","e","compose","mount","map","request","context","a","route","getView","req","Dashboard","Biorythm","redirect","Weather","Calculator","SignUp","SignIn","Error404","Layout","children","loadingRoute","useLoadingRoute","className","BusyIndicator","isBusy","delayMs","render","App","useState","setCurrentUser","useEffect","routes","fallback","ReactDOM","StrictMode","document","getElementById"],"mappings":"4NAAA,SAASA,IACL,IAAMC,EAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAEpD,OAAIL,GAAQA,EAAKM,YAEN,CAAC,iBAAkBN,EAAKM,aAExB,GCLR,IAAMC,EAAc,CAEjBC,MAFiB,SAEXC,GAAO,IAAD,kHACdN,OAAOC,aAAaM,QAAQ,QAAST,KAAKU,UAAUF,IACpD,EAAKG,YAAcH,EACf,EAAKI,UACL,EAAKA,SAASJ,GAJJ,8CAOlBK,eATuB,WAUnB,OAAOC,KAAKH,aAEhBI,YAZuB,WAcnB,ODLO,WAEX,IAAMC,EAAiB,CACnBC,OAAQ,MACRC,QAASpB,KAGb,OAAOqB,MAAM,GAAD,OAAIjB,OAAOkB,IAAX,qCAAmDJ,GAE1DK,MAAK,SAAAC,GACC,OAAOA,EAASC,OACVF,MAAK,SAAAb,GACF,OAAqB,MAAlBc,EAASE,QAAiC,MAAlBF,EAASE,QAAgC,MAAlBF,EAASE,aCPpEC,GAAiBJ,MAAK,SAACK,GAC1B,OAAOA,MAGfC,YAlBuB,kBAmBZb,KAAKH,YACZT,OAAOC,aAAayB,QAChBd,KAAKF,UACLE,KAAKF,cAASiB,IAItBC,UA1BuB,SA0BblB,GAAW,IAAD,OAEhB,OADAE,KAAKF,SAAWA,EACT,WACH,EAAKA,cAAWiB,KAK5B,IACIvB,EAAYK,YAAcX,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UACnE,MAAO2B,I,WCnCMC,cACXC,YAAM,CACF,kCAAmCC,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEAC7BD,EAAQ9B,YAAYS,cADS,uCACOuB,YAAM,CACxCC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAE6B,mEAF7B,uBAEWC,EAFX,EAEWA,SAFX,kBAIQ,kBAACD,EAAD,CAAYnC,YAAa8B,EAAQ9B,aAC7B,kBAACoC,EAAD,QALZ,2CADG,qDAAC,KAFmB,2BAc/BC,YAAS,4BAdsB,iFAAD,yDAgBtC,8BAA+BT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEACzBD,EAAQ9B,YAAYS,cADK,uCACWuB,YAAM,CACxCC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAE4B,0EAF5B,uBAEWG,EAFX,EAEWA,QAFX,kBAIQ,kBAACH,EAAD,CAAYnC,YAAa8B,EAAQ9B,aAC7B,kBAACsC,EAAD,QALZ,2CADG,qDAAC,KAFe,2BAc3BD,YAAS,4BAdkB,iFAAD,yDAgBlC,qCAAsCT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEAChCD,EAAQ9B,YAAYS,cADY,uCACIuB,YAAM,CACxCC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,qBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,SAE+B,yEAF/B,uBAEWI,EAFX,EAEWA,WAFX,kBAIQ,kBAACJ,EAAD,CAAYnC,YAAa8B,EAAQ9B,aAC7B,kBAACuC,EAAD,QALZ,2CADG,qDAAC,KAFsB,2BAclCF,YAAS,4BAdyB,iFAAD,yDAgBzC,wBAAyBT,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEACnBD,EAAQ9B,YAAYS,cADD,uCACiBuB,YAAM,CACxCC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,iBAAAC,EAAA,sEAC8B,kEAD9B,uBACWI,EADX,EACWA,UADX,kBAEW,kBAACA,EAAD,CAAWnC,YAAa8B,EAAQ9B,eAF3C,2CADG,qDAAC,KAFS,2BASrBqC,YAAS,4BATY,iFAAD,yDAW5B,2BAA4BL,YAAM,CAC9BC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,iBAAAC,EAAA,sEAC2B,0EAD3B,uBACWS,EADX,EACWA,OADX,kBAEW,kBAACA,EAAD,CAAQxC,YAAa8B,EAAQ9B,eAFxC,2CADG,qDAAC,KAMZ,2BAA4B4B,YAAG,uCAAC,WAAOC,EAASC,GAAhB,SAAAC,EAAA,sEACtBD,EAAQ9B,YAAYS,cADE,uCAExB4B,YAAS,yBAFe,2BAGtBL,YAAM,CACJC,QAAQ,WAAD,4BACH,WAAOC,EAAKJ,GAAZ,iBAAAC,EAAA,sEAE2B,2EAF3B,uBAEWU,EAFX,EAEWA,OAFX,kBAGW,kBAACA,EAAD,CAAQzC,YAAa8B,EAAQ9B,eAHxC,2CADG,qDAAC,KAJY,iFAAD,yDAY/B,IAAKqC,YAAS,4BACd,cAAeA,YAAS,+B,eCjFjB,SAASK,IACpB,OACI,2CCAO,SAASC,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAGzBC,EAAeC,cAEnB,OACI,yBAAKC,UAAU,UAEX,kBAACC,EAAA,EAAD,CAAeC,SAAUJ,EAAcK,QAAS,MAChD,8BACI,kBAAC,IAAD,CAAkBC,OAAQT,GACrBE,KCRN,SAASQ,IAAO,IAAD,EACSC,oBAAS,kBAAMrD,EAAYO,oBADpC,mBACrBF,EADqB,KACTiD,EADS,KAK1B,OAFAC,qBAAU,kBAAKvD,EAAYwB,UAAU8B,KAAgB,IAIjD,kBAAC,IAAD,CAAQE,OAAQA,EAAQ1B,QAAS,CAAC9B,cAAaK,gBAC3C,kBAACsC,EAAD,KACI,kBAAC,WAAD,CAAUc,SAAU,MAChB,kBAAC,IAAD,SAZpB7D,OAAOkB,IAAM,wB,YCAb4C,IAASP,OACL,kBAAC,IAAMQ,WAAP,KACI,kBAAC,IAAD,KACI,kBAACP,EAAD,QAIRQ,SAASC,eAAe,W","file":"static/js/main.e33c6fc2.chunk.js","sourcesContent":["function authHeader() {\r\n    const user = JSON.parse(window.localStorage.getItem('users'));\r\n\r\n    if (user && user.accessToken) {\r\n        // for Node.js Express back-end\r\n        return {'x-access-token': user.accessToken};\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport default function getUserBoard() {\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader(),\r\n    };\r\n\r\n    return fetch(`${window.url}/mysuperday/api/users/verifyToken`, requestOptions)\r\n\r\n        .then(response => {\r\n               return response.json()\r\n                    .then(data => {\r\n                        if(response.status===403 ||response.status===401||response.status===500 ){\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    })\r\n            }\r\n        )\r\n\r\n\r\n}\r\n","import CheckConnected from \"../Controller/CheckConnected\";\r\n\r\nexport const authService = {\r\n\r\n    async login(data) {\r\n        window.localStorage.setItem('users', JSON.stringify(data))\r\n        this.currentUser = data\r\n        if (this.callback) {\r\n            this.callback(data)\r\n        }\r\n    },\r\n    getCurrentUser() {\r\n        return this.currentUser\r\n    },\r\n    isConnected() {\r\n\r\n        return CheckConnected().then((res) => {\r\n            return res\r\n        })\r\n    },\r\n    deconnected() {\r\n        delete this.currentUser\r\n        window.localStorage.clear();\r\n        if (this.callback) {\r\n            this.callback(undefined)\r\n        }\r\n    },\r\n\r\n    subscribe(callback) {\r\n        this.callback = callback\r\n        return () => {\r\n            this.callback = undefined\r\n        }\r\n    }\r\n\r\n}\r\ntry {\r\n    authService.currentUser = JSON.parse(window.localStorage.getItem('users'))\r\n} catch (e) {\r\n}","import {compose, mount, route, redirect, map} from 'navi'\r\nimport React from 'react'\r\n\r\nexport default compose(\r\n    mount({\r\n        '/mysuperday/dashboard/biorythme': map(async (request, context) =>\r\n            await context.authService.isConnected() ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Biorythm} = await import('../Components/Biorythm/BiorythmMain/biorythm')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Biorythm/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/meteo': map(async (request, context) =>\r\n            await context.authService.isConnected() ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Weather} = await import('../Components/Weather/WeatherMain/weatherMain')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Weather/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard/calculatrice': map(async (request, context) =>\r\n            await context.authService.isConnected() ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            const {Calculator} = await import('../Components/Calculator/CalculatorMain/calculator')\r\n                            return (\r\n                                <Dashboard  authService={context.authService}>\r\n                                    <Calculator/>\r\n                                </Dashboard>\r\n                            )\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/dashboard': map(async (request, context) =>\r\n            await context.authService.isConnected() ? route({\r\n                    getView:\r\n                        async (req, context) => {\r\n                            const {Dashboard} = await import('../Components/DashBoard/dashboard')\r\n                            return <Dashboard authService={context.authService}/>\r\n                        },\r\n                })\r\n                :\r\n                redirect('/mysuperday/users/signin')\r\n        ),\r\n        '/mysuperday/users/signup': route({\r\n            getView:\r\n                async (req, context) => {\r\n                    const {SignUp} = await import('../Components/SignUp/signUp')\r\n                    return <SignUp authService={context.authService}/>\r\n                },\r\n        }),\r\n        '/mysuperday/users/signin': map(async (request, context) =>\r\n            await context.authService.isConnected() ?\r\n                redirect('/mysuperday/dashboard')\r\n                : route({\r\n                    getView:\r\n                        async (req, context) => {\r\n\r\n                            const {SignIn} = await import('../Components/SignIn/signIn')\r\n                            return <SignIn authService={context.authService}/>\r\n                        },\r\n                })\r\n        ),\r\n        '/': redirect('/mysuperday/users/signin'),\r\n        '/mysuperday': redirect('/mysuperday/users/signin'),\r\n\r\n    })\r\n)","import React from \"react\";\r\n\r\n\r\nexport default function Error404 () {\r\n    return(\r\n        <div>\r\n            Erreur 404\r\n        </div>\r\n    )\r\n}","import BusyIndicator from 'react-busy-indicator'\r\nimport React from 'react'\r\nimport {  NotFoundBoundary, useLoadingRoute } from 'react-navi'\r\nimport Error404 from \"../Model/Error404\";\r\n\r\nexport default function Layout({ children }) {\r\n    // If there is a route that hasn't finished loading, it can be\r\n    // retrieved with `useLoadingRoute()`.\r\n    let loadingRoute = useLoadingRoute()\r\n\r\n    return (\r\n        <div className=\"Layout\">\r\n            {/* This component shows a loading indicator after a delay */}\r\n            <BusyIndicator isBusy={!!loadingRoute} delayMs={200} />\r\n            <main>\r\n                <NotFoundBoundary render={Error404}>\r\n                    {children}\r\n                </NotFoundBoundary>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Suspense, useEffect, useState} from 'react'\r\nimport {authService} from './Model/helper'\r\nimport routes from './Model/globalRoutes'\r\nimport {Router, View} from 'react-navi'\r\nimport Layout from './Components/Layout'\r\n\r\nwindow.url = \"http://localhost:9000\"\r\n\r\nexport default function App() {\r\n    let [currentUser,setCurrentUser] = useState(() => authService.getCurrentUser())\r\n\r\n    useEffect(()=> authService.subscribe(setCurrentUser),[])\r\n\r\n    return (\r\n\r\n        <Router routes={routes} context={{authService, currentUser}}>\r\n            <Layout>\r\n                <Suspense fallback={null}>\r\n                    <View/>\r\n                </Suspense>\r\n\r\n            </Layout>\r\n\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app'\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <App></App>\r\n        </Router>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}