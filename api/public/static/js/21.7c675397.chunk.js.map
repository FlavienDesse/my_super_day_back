{"version":3,"sources":["Components/NoteBlock/NoteBlockMain/style.js","Components/NoteBlock/NoteBlockMain/renderSaveNote.js","Components/NoteBlock/NoteBlockMain/modelSavefile.js","Components/NoteBlock/NoteBlockMain/modalSaveNote.js","Components/NoteBlock/NoteBlockMain/noteBlock.js"],"names":["useStyles","makeStyles","theme","gridContainer","marginTop","marginBottom","gridContainerSavedNote","inputSaveFile","width","gridContainerModal","title","textAlign","modal","display","alignItems","justifyContent","paper","position","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","editIcon","fill","Rendersavenote","props","classes","React","useState","isWritable","setIsWritable","saveIsDisabled","setSaveIsDisabled","modifyIsDisabled","setModifyIsDisabled","value","valueTextField","setValueTextField","Grid","item","xs","className","container","justify","TextField","label","name","id","InputProps","readOnly","multiline","onChange","e","currentTarget","variant","size","aria-label","disabled","onClick","updateNoteDB","pos","style","fontSize","color","deleteNote","ModelSaveFile","this","getModalStyle","top","left","transform","SimpleModal","refTitleFieldNote","useRef","modalStyle","Modal","aria-labelledby","aria-describedby","open","onClose","handleClose","inputRef","placeholder","Button","temp","allSaveFile","slice","requestOptions","method","headers","Object","assign","authHeader","body","JSON","stringify","id_user","encodeURI","parse","window","localStorage","getItem","current","valueTextFieldNote","fetch","url","then","res","json","data","push","setAllSaveFile","NoteBlock","setOpen","refTextFieldNote","handleOpen","i","newValue","splice","useEffect","elem","Paper","elevation","rows","map","key","toString"],"mappings":"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","file":"static/js/21.7c675397.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    gridContainer:{\r\n        marginTop:'50px !important',\r\n        marginBottom:'100px !important',\r\n    },\r\n    gridContainerSavedNote:{\r\n        marginTop:'15px !important',\r\n    },\r\n    inputSaveFile:{\r\n        width:'100%',\r\n\r\n    },\r\n    gridContainerModal:{\r\n        marginTop:'15px',\r\n    },\r\n\r\n    title:{\r\n        textAlign:'center',\r\n    },\r\n\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width:350,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    editIcon:{\r\n        fill: 'rgba(255,140,0)'\r\n    }\r\n}));\r\n\r\nexport default useStyles;\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport useStyles from \"./style\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\n\r\nfunction Rendersavenote(props) {\r\n    const classes = useStyles();\r\n    const [isWritable,setIsWritable]=React.useState(true)\r\n    const [saveIsDisabled,setSaveIsDisabled]=React.useState(true)\r\n    const [modifyIsDisabled,setModifyIsDisabled]=React.useState(false)\r\n    const [valueTextField,setValueTextField]=React.useState(props.value)\r\n\r\n\r\n\r\n        return (\r\n        <Grid item xs={12} className={classes.gridContainerSavedNote}>\r\n            <Grid container spacing={0} justify={'center'} alignItems={\"center\"}>\r\n\r\n\r\n                <Grid item xs={7}>\r\n                    <TextField label={props.name} id=\"outlined-basic\" InputProps={{readOnly: isWritable}} multiline={true}  onChange={(e)=>{\r\n                    \r\n                        setValueTextField(e.currentTarget.value)\r\n\r\n                    }} value={valueTextField} className={classes.inputSaveFile}\r\n                               variant=\"outlined\" size=\"small\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={'auto'} >\r\n                    <IconButton aria-label=\"save\" disabled={saveIsDisabled} onClick={()=>{\r\n\r\n                        setModifyIsDisabled(!modifyIsDisabled);\r\n                        setSaveIsDisabled(!saveIsDisabled);\r\n                        setIsWritable(!isWritable);\r\n                        props.updateNoteDB(props.pos,valueTextField)\r\n                    }}>\r\n                        <SaveIcon style={{fontSize: 29}} color={\"primary\"}/>\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid item xs={'auto'} >\r\n                    <IconButton aria-label=\"delete\" onClick={()=>props.deleteNote(props.pos)}>\r\n                        <DeleteIcon style={{fontSize: 29}} color={\"secondary\"}/>\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid item xs={'auto'}>\r\n\r\n                        <IconButton aria-label=\"save\" onClick={()=>{\r\n                            setSaveIsDisabled(!saveIsDisabled);\r\n                            setIsWritable(!isWritable);\r\n                            setModifyIsDisabled(!modifyIsDisabled);\r\n                        }} disabled={modifyIsDisabled}>\r\n                                <EditIcon className={classes.editIcon}/>\r\n                        </IconButton>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Rendersavenote;","export default class ModelSaveFile {\r\n    constructor(name,value,id) {\r\n        this.name = name;\r\n        this.value=value;\r\n        this.id=id;\r\n    }\r\n}","import React from \"react\";\r\nimport useStyles from \"./style\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ModelSaveFile from \"./modelSavefile\";\r\nimport {authHeader} from \"../../../Controller/CheckConnected\";\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50 ;\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default function SimpleModal(props) {\r\n    let refTitleFieldNote = React.useRef()\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    function addNote(){\r\n\r\n        let temp = props.allSaveFile.slice()\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: Object.assign({}, authHeader(), {'Content-Type': 'application/json'}),\r\n            body: JSON.stringify({\r\n                id_user: encodeURI(JSON.parse(window.localStorage.getItem('users')).id),\r\n                title:refTitleFieldNote.current.value,\r\n                value:props.valueTextFieldNote.value\r\n            }),\r\n        };\r\n        fetch(`${window.url}/mysuperday/api/blocNotes/addNote`,requestOptions).then((res)=>{\r\n            return res.json()\r\n        }).then((data)=>{\r\n            temp.push(new ModelSaveFile(refTitleFieldNote.current.value,props.valueTextFieldNote.value,data.id))\r\n            props.setAllSaveFile(temp);\r\n            props.handleClose();\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" open={props.open} onClose={props.handleClose}>\r\n                    <div style={modalStyle} className={classes.paper}>\r\n                        <Grid>\r\n                            <Grid container justify={\"center\"}>\r\n                            <h3>\r\n                               Titre de la note :\r\n                            </h3>\r\n                            </Grid>\r\n\r\n                            <Grid container justify={\"center\"}>\r\n                                <TextField inputRef={refTitleFieldNote} id=\"outlined-basic\" placeholder={'Titre'} variant=\"outlined\" size=\"small\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid container justify=\"space-evenly\" alignItems=\"center\" className={classes.gridContainerModal}>\r\n                                <Grid item xs={'auto'}>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={addNote}>\r\n                                        VALIDER\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} >\r\n                                    <Button variant=\"contained\" color=\"secondary\">\r\n                                        ANNULER\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Rendersavenote from \"./renderSaveNote\";\r\nimport SimpleModal from \"./modalSaveNote\";\r\nimport ModelSaveFile from \"./modelSavefile\";\r\nimport {authHeader} from \"../../../Controller/CheckConnected\";\r\n\r\n\r\nexport function NoteBlock(props) {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [allSaveFile, setAllSaveFile] = React.useState([]);\r\n    const refTextFieldNote = React.useRef();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: Object.assign({}, authHeader(), {'Content-Type': 'application/json'}),\r\n            body: JSON.stringify({\r\n                id_user: encodeURI(JSON.parse(window.localStorage.getItem('users')).id),\r\n            }),\r\n        };\r\n        fetch(`${window.url}/mysuperday/api/blocNotes/getAllNotes`,requestOptions).then((res)=>{\r\n            return res.json()\r\n        }).then((data)=>{\r\n            let temp = []\r\n            for (const elem of data){\r\n                temp.push(new ModelSaveFile(elem.title,elem.value,elem.id))\r\n            }\r\n\r\n            setAllSaveFile(temp)\r\n        });\r\n    },[])\r\n\r\n\r\n    function updateNoteDB(i,newValue){\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: Object.assign({}, authHeader(), {'Content-Type': 'application/json'}),\r\n            body: JSON.stringify({\r\n                id:allSaveFile[i].id,\r\n                newValue:newValue,\r\n            }),\r\n        };\r\n        fetch(`${window.url}/mysuperday/api/blocNotes/updateNote`,requestOptions).then((res)=>{\r\n            return res.json()\r\n        })\r\n\r\n    }\r\n\r\n    function deleteNote (i) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: Object.assign({}, authHeader(), {'Content-Type': 'application/json'}),\r\n            body: JSON.stringify({\r\n                id:allSaveFile[i].id,\r\n            }),\r\n        };\r\n        fetch(`${window.url}/mysuperday/api/blocNotes/deleteNote`,requestOptions).then((res)=>{\r\n            return res.json()\r\n        }).then((data)=>{\r\n            let temp = allSaveFile.slice();\r\n            temp.splice(i,1);\r\n            setAllSaveFile(temp)\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.container}>\r\n            <SimpleModal  allSaveFile={allSaveFile} valueTextFieldNote={refTextFieldNote.current} setAllSaveFile={setAllSaveFile} handleOpen={handleOpen} handleClose={handleClose} open={open}>\r\n            </SimpleModal>\r\n\r\n            <Grid container justify={\"center\"}>\r\n                <Grid item xs={4}  className={classes.title}>\r\n                    <Paper variant={'elevation'} elevation={5} color={\"primary\"}>\r\n                        Generation d'une nouvelle note\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={0} justify={'center'} alignItems={\"center\"}\r\n                      className={classes.gridContainer}>\r\n                    <Grid item xs={7}>\r\n                        <TextField inputRef={refTextFieldNote} id=\"outlined-basic\" placeholder={'Nouvelle note'}\r\n                                   multiline={true} rows={3} className={classes.inputSaveFile} variant=\"outlined\"\r\n                                   size=\"small\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={'auto'} >\r\n                        <IconButton aria-label=\"save\">\r\n                            <SaveIcon onClick={() => handleOpen()}  style={{fontSize: 29}} color={\"primary\"}/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={'auto'} >\r\n                        <IconButton aria-label=\"delete\">\r\n                            <DeleteIcon onClick={() => refTextFieldNote.current.value = \"\"} style={{fontSize: 29}}\r\n                                        color={\"secondary\"}/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.title}>\r\n                    <Paper variant={'elevation'} elevation={5} color={\"primary\"}>\r\n                        Consultation des notes\r\n                    </Paper>\r\n                </Grid>\r\n                {\r\n                    allSaveFile.map((item, i) =>\r\n                            <Rendersavenote updateNoteDB={updateNoteDB} key={i.toString()} pos={i}  deleteNote={deleteNote} name={item.name} value={item.value}>\r\n\r\n                            </Rendersavenote>\r\n\r\n                    )\r\n\r\n                }\r\n\r\n            </Grid>\r\n\r\n        </div>);\r\n\r\n\r\n}\r\n\r\n"],"sourceRoot":""}